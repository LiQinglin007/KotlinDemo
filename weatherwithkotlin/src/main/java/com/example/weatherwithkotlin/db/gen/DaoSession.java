package com.example.weatherwithkotlin.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.weatherwithkotlin.db.bean.CityBean;
import com.example.weatherwithkotlin.db.bean.WeatherNowDataBean;

import com.example.weatherwithkotlin.db.gen.CityBeanDao;
import com.example.weatherwithkotlin.db.gen.WeatherNowDataBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cityBeanDaoConfig;
    private final DaoConfig weatherNowDataBeanDaoConfig;

    private final CityBeanDao cityBeanDao;
    private final WeatherNowDataBeanDao weatherNowDataBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cityBeanDaoConfig = daoConfigMap.get(CityBeanDao.class).clone();
        cityBeanDaoConfig.initIdentityScope(type);

        weatherNowDataBeanDaoConfig = daoConfigMap.get(WeatherNowDataBeanDao.class).clone();
        weatherNowDataBeanDaoConfig.initIdentityScope(type);

        cityBeanDao = new CityBeanDao(cityBeanDaoConfig, this);
        weatherNowDataBeanDao = new WeatherNowDataBeanDao(weatherNowDataBeanDaoConfig, this);

        registerDao(CityBean.class, cityBeanDao);
        registerDao(WeatherNowDataBean.class, weatherNowDataBeanDao);
    }
    
    public void clear() {
        cityBeanDaoConfig.getIdentityScope().clear();
        weatherNowDataBeanDaoConfig.getIdentityScope().clear();
    }

    public CityBeanDao getCityBeanDao() {
        return cityBeanDao;
    }

    public WeatherNowDataBeanDao getWeatherNowDataBeanDao() {
        return weatherNowDataBeanDao;
    }

}
